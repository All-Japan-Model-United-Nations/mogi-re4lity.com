"use strict";(self.webpackChunksoumublog=self.webpackChunksoumublog||[]).push([[8130],{7735:n=>{n.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"zero-trust","metadata":{"permalink":"/blog/zero-trust","editUrl":"https://github.com/All-Japan-Model-United-Nations/mogi-re4lity.com/tree/main/blog/2025-05-10-zerotrust/index.md","source":"@site/blog/2025-05-10-zerotrust/index.md","title":"\u5185\u90e8\u30b5\u30a4\u30c8\u306e\u95b2\u89a7\u5236\u9650(Zero Trust\u30fbAccess\u30dd\u30ea\u30b7\u30fc)\u306e\u7de8\u96c6\u3092\u81ea\u52d5\u5316\u3057\u305f\u8a71","description":"\u672c\u30b5\u30a4\u30c8\u306e\u59c9\u59b9\u30b5\u30a4\u30c8\u3067\u3042\u308bhttps://internal-mogi.re4lity.com/ \u306fCloudflare\u306eZero Trust\u3092\u6d3b\u7528\u3057\u3066\u975e\u516c\u958b\u30b5\u30a4\u30c8\u3068\u3057\u3066\u3044\u307e\u3059\u3002","date":"2025-05-10T00:00:00.000Z","tags":[{"inline":false,"label":"ZeroTrust","permalink":"/blog/tags/ZeroTrust","description":"ZeroTrust\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b"},{"inline":false,"label":"CI/CD","permalink":"/blog/tags/CI-CD","description":"CI/CD\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b"}],"readingTime":7.285,"hasTruncateMarker":true,"authors":[{"name":"re4lity","title":"\u7b2c36\u56de\u6a21\u64ec\u56fd\u9023\u5168\u65e5\u672c\u5927\u4f1a\u4e8b\u52d9\u5c40\u3000\u7dcf\u52d9\u7d71\u62ec","url":"https://github.com/sudolifeagain","page":{"permalink":"/blog/authors/re-4-lity"},"socials":{"x":"https://x.com/re4l_ity","github":"https://github.com/sudolifeagain"},"imageURL":"https://github.com/sudolifeagain.png","key":"re4lity"}],"frontMatter":{"slug":"zero-trust","title":"\u5185\u90e8\u30b5\u30a4\u30c8\u306e\u95b2\u89a7\u5236\u9650(Zero Trust\u30fbAccess\u30dd\u30ea\u30b7\u30fc)\u306e\u7de8\u96c6\u3092\u81ea\u52d5\u5316\u3057\u305f\u8a71","authors":["re4lity"],"tags":["ZeroTrust","CI/CD"]},"unlisted":false,"nextItem":{"title":"\u672c\u30b5\u30a4\u30c8\u306e\u958b\u767a\u3067\u7528\u3044\u3066\u3044\u308bGithub Actions\u306e\u7d39\u4ecb","permalink":"/blog/github-actions"}},"content":"<img src=\\"/img/zerotrust.png\\" width=\\"750\\" alt=\\"ZeroTrust\u306e\u30dd\u30ea\u30b7\u30fc\u81ea\u52d5\u66f4\u65b0\u30b7\u30b9\u30c6\u30e0\u306e\u69cb\u6210\u56f3\\" />\\n\u672c\u30b5\u30a4\u30c8\u306e\u59c9\u59b9\u30b5\u30a4\u30c8\u3067\u3042\u308bhttps://internal-mogi.re4lity.com/ \u306fCloudflare\u306e[Zero Trust](https://www.cloudflare.com/ja-jp/zero-trust/)\u3092\u6d3b\u7528\u3057\u3066\u975e\u516c\u958b\u30b5\u30a4\u30c8\u3068\u3057\u3066\u3044\u307e\u3059\u3002<br />\\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u95b2\u89a7\u6a29\u9650\u306e\u8ffd\u52a0\u3092\u81ea\u52d5\u5316\u3057\u305f\u7d4c\u9a13\u306b\u3064\u3044\u3066\u307e\u3068\u3081\u307e\u3059\u3002\\n\x3c!-- truncate --\x3e\\n\\n## \u4eca\u307e\u3067\u306e\u8ab2\u984c\\n\\n\u5185\u90e8\u7528\u30b5\u30a4\u30c8\u306f\u95a2\u4fc2\u8005\u3057\u304b\u898b\u305b\u306a\u3044\u524d\u63d0\u3067\u4f5c\u6210\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3042\u307e\u308a\u5916\u90e8\u306b\u898b\u305b\u305f\u304f\u306a\u3044\u3088\u3046\u306a\u60c5\u5831\u3082\u84c4\u7a4d\u3057\u3066\u3044\u307e\u3059\u3002<br />\\n\u305d\u306e\u305f\u3081\u30b5\u30a4\u30c8\u904b\u55b6\u8005\u306e\u500b\u4eba\u304c\u6301\u3063\u3066\u3044\u308bCloudflare\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u4e0a\u306eZero Trust\u306e\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u306b\u3066\u624b\u52d5\u3067\u95b2\u89a7\u6a29\u9650\u3092\u4ed8\u4e0e\u3057\u3066\u3044\u307e\u3057\u305f\u3002<br />\\n\u3057\u304b\u3057\u3001\u4eca\u5f8c\u3082\u95b2\u89a7\u6a29\u9650\u3092\u65b0\u305f\u306b\u4ed8\u4e0e\u3059\u308b\u30b1\u30fc\u30b9\u304c\u7d9a\u304d\u305d\u3046\u306a\u3053\u3068\u3001\u30b5\u30a4\u30c8\u904b\u55b6\u8005\u304c\u5fd9\u3057\u304f\u306a\u308a\u5bfe\u5fdc\u304c\u9045\u304f\u306a\u308a\u305d\u3046\u306a\u4e8b\u60c5\u304c\u3042\u308a\u3001\u5b89\u5168\u306a\u5f62\u3067\u6a29\u9650\u306e\u4ed8\u4e0e\u3092\u81ea\u52d5\u5316\u3057\u305f\u3044\u3068\u3044\u3046\u30cb\u30fc\u30ba\u304c\u3042\u308a\u307e\u3057\u305f\u3002\\n\\n### \u81ea\u52d5\u5316\u306e\u69cb\u6210\\n\\n\u4ee5\u4e0b\u306e\u753b\u50cf\u304c\u8a73\u3057\u3044\u3067\u3059\u3002\\n\\n\\n\\n\u8981\u3059\u308b\u306bGoogle\u30d5\u30a9\u30fc\u30e0\u3067\u65b0\u3057\u3044\u30e1\u30a2\u30c9\u3092\u6295\u3052\u305f\u3089\u305d\u308c\u304cGithub\u7d4c\u7531\u3067Zero Trust\u306e\u7279\u5b9a\u306e\u30dd\u30ea\u30b7\u30fc\u306b\u8ffd\u52a0\u3055\u308c\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\\n\\n#### Google\u30d5\u30a9\u30fc\u30e0\u304b\u3089Github\u3078\u306e\u9023\u643a\\n\\n\u4ee5\u4e0b\u306eGAS\u3092\u30d5\u30a9\u30fc\u30e0\u9001\u4fe1\u6642\u306e\u30c8\u30ea\u30ac\u30fc\u3092\u8a2d\u5b9a\u3057\u3066\u904b\u7528\u3057\u3066\u3044\u307e\u3059\u3002\\n\\n<details>\\n  <summary>GAS\u306e\u30b3\u30fc\u30c9</summary>\\n\\n```js\\nconst GITHUB_TOKEN = \'ghp_hogehoge\';\\nconst OWNER       = \'All-Japan-Model-United-Nations\';        // \u30ea\u30dd\u30b8\u30c8\u30ea\u6240\u6709\u8005\\nconst REPO        = \'internal-mail\';            // \u30ea\u30dd\u30b8\u30c8\u30ea\u540d\\nconst FILE_PATH   = \'allowed_emails.txt\';   // \u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\\nconst FORM_FIELD   = \'\u8ffd\u52a0\u3059\u308b\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\';     // \u30d5\u30a9\u30fc\u30e0\u306e\u8cea\u554f\u30bf\u30a4\u30c8\u30eb\\n\\nfunction onFormSubmit(e) {\\n  // --- \u30ac\u30fc\u30c9\u7bc0\uff1a\u30a4\u30d9\u30f3\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u6709\u7121\u3092\u30c1\u30a7\u30c3\u30af ---\\n  if (!e) {\\n    console.error(\'onFormSubmit: \u30a4\u30d9\u30f3\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6e21\u3055\u308c\u3066\u3044\u307e\u305b\u3093\');\\n    return;\\n  }\\n\\n  // --- 1) \u30d5\u30a9\u30fc\u30e0\u56de\u7b54\u304b\u3089\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u53d6\u5f97 ---\\n  let email = \'\';\\n\\n  // \u30b9\u30d7\u30ec\u30c3\u30c9\u30b7\u30fc\u30c8\u9023\u643a\u30d5\u30a9\u30fc\u30e0\u306e\u5834\u5408\\n  if (e.namedValues) {\\n    const keys = Object.keys(e.namedValues);\\n    console.log(\'namedValues keys:\', keys);\\n    // \u8cea\u554f\u30bf\u30a4\u30c8\u30eb\u3068\u5b8c\u5168\u4e00\u81f4\u3059\u308b\u30ad\u30fc\u3092\u4f7f\u3046\\n    if (e.namedValues[FORM_FIELD] && e.namedValues[FORM_FIELD][0]) {\\n      email = e.namedValues[FORM_FIELD][0].trim();\\n    }\\n  }\\n  // \u30d5\u30a9\u30fc\u30e0\u5358\u4f53\u30d0\u30a4\u30f3\u30c9\u306e\u5834\u5408\\n  if (!email && e.response && e.response.getItemResponses) {\\n    const responses = e.response.getItemResponses();\\n    responses.forEach(item => {\\n      if (item.getItem().getTitle() === FORM_FIELD) {\\n        email = item.getResponse().trim();\\n      }\\n    });\\n  }\\n  if (!email) {\\n    console.error(\'onFormSubmit: \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u304c\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\');\\n    return;\\n  }\\n  console.log(\'\u53d6\u5f97\u3057\u305f\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9:\', email);\\n\\n  // --- 2) GitHub \u304b\u3089\u65e2\u5b58\u30d5\u30a1\u30a4\u30eb\u3092\u53d6\u5f97 ---\\n  const apiUrl = `https://api.github.com/repos/${OWNER}/${REPO}/contents/${FILE_PATH}`;\\n  const headers = {\\n    \'Authorization\': `token ${GITHUB_TOKEN}`,\\n    \'Accept\': \'application/vnd.github.v3+json\'\\n  };\\n  let payload, sha, content;\\n  try {\\n    const resp = UrlFetchApp.fetch(apiUrl, { method: \'get\', headers });\\n    payload = JSON.parse(resp.getContentText());\\n    sha = payload.sha;\\n    // Base64 \u2192 \u6587\u5b57\u5217\\n    content = Utilities.newBlob(Utilities.base64Decode(payload.content)).getDataAsString();\\n  } catch (err) {\\n    console.error(\'GitHub \u30d5\u30a1\u30a4\u30eb\u53d6\u5f97\u30a8\u30e9\u30fc:\', err);\\n    return;\\n  }\\n\\n  // --- 3) \u91cd\u8907\u30c1\u30a7\u30c3\u30af ---\\n  const lines = content.split(\'\\\\n\').map(line => line.trim()).filter(line => line);\\n  if (lines.indexOf(email) !== -1) {\\n    console.log(\'\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306f\u65e2\u306b\u767b\u9332\u6e08\u307f\u3067\u3059:\', email);\\n    return;\\n  }\\n\\n  // --- 4) \u30d5\u30a1\u30a4\u30eb\u5185\u5bb9\u3092\u66f4\u65b0 & Base64 \u30a8\u30f3\u30b3\u30fc\u30c9 ---\\n  lines.push(email);\\n  const updatedContent = lines.join(\'\\\\n\') + \'\\\\n\';\\n  const updatedB64 = Utilities.base64Encode(updatedContent);\\n\\n  // --- 5) PUT \u3067\u66f4\u65b0\uff06\u30b3\u30df\u30c3\u30c8 ---\\n  const body = {\\n    message: `Add allowed email: ${email}`,\\n    content: updatedB64,\\n    sha: sha\\n  };\\n  try {\\n    const putResp = UrlFetchApp.fetch(apiUrl, {\\n      method: \'put\',\\n      headers: headers,\\n      payload: JSON.stringify(body)\\n    });\\n    console.log(\'GitHub \u66f4\u65b0\u30b9\u30c6\u30fc\u30bf\u30b9:\', putResp.getResponseCode());\\n  } catch (err) {\\n    console.error(\'GitHub \u30d5\u30a1\u30a4\u30eb\u66f4\u65b0\u30a8\u30e9\u30fc:\', err);\\n  }\\n}\\n```\\n\\n</details>\\n\\n#### Github Actions\u306b\u3088\u308b\u30dd\u30ea\u30b7\u30fc\u306e\u81ea\u52d5\u540c\u671f\\n\\n\\n\\n<details>\\n  <summary>cloudflare_sync.yml</summary>\\n\\n```yml\\nname: Update Cloudflare Zero Trust Policy\\n\\non:\\n  push:\\n    paths:\\n      - \'allowed_emails.txt\'\\n    branches:\\n      - main\\n  workflow_dispatch:  # \u624b\u52d5\u5b9f\u884c\u3082\u53ef\u80fd\u306b\u3059\u308b\\n\\njobs:\\n  update-policy:\\n    runs-on: ubuntu-latest\\n    steps:\\n      - name: Checkout code\\n        uses: actions/checkout@v3\\n\\n      - name: Set up Python\\n        uses: actions/setup-python@v4\\n        with:\\n          python-version: \'3.10\'\\n\\n      - name: Install dependencies\\n        run: |\\n          python -m pip install --upgrade pip\\n          pip install requests\\n\\n      - name: Update Cloudflare Zero Trust Policy\\n        env:\\n          CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}\\n          CF_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}\\n          CF_POLICY_ID: ${{ secrets.CLOUDFLARE_POLICY_ID }}\\n        run: |\\n          cat > update_policy.py << \'EOF\'\\n          import os\\n          import json\\n          import requests\\n\\n          # \u8a8d\u8a3c\u60c5\u5831\u3092\u74b0\u5883\u5909\u6570\u304b\u3089\u53d6\u5f97\\n          api_token = os.environ[\'CF_API_TOKEN\']\\n          account_id = os.environ[\'CF_ACCOUNT_ID\']\\n          policy_id = os.environ[\'CF_POLICY_ID\']\\n\\n          # \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306e\u30ea\u30b9\u30c8\u3092\u8aad\u307f\u8fbc\u307f\\n          with open(\'allowed_emails.txt\', \'r\') as f:\\n              emails = [line.strip() for line in f.readlines() if line.strip()]\\n\\n          # \u7121\u52b9\u306a\u884c\u3084\u30b3\u30e1\u30f3\u30c8\u3092\u9664\u5916\\n          emails = [email for email in emails if \'@\' in email and not email.startswith(\'#\')]\\n\\n          print(f\'\u8aad\u307f\u8fbc\u3093\u3060\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u6570: {len(emails)}\')\\n\\n          # Cloudflare API\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\\n          url = f\'https://api.cloudflare.com/client/v4/accounts/{account_id}/access/policies/{policy_id}\'\\n          \\n          print(f\\"API URL: {url}\\")\\n\\n          # \u65e2\u5b58\u306e\u30dd\u30ea\u30b7\u30fc\u3092\u53d6\u5f97\\n          headers = {\\n              \'Authorization\': f\'Bearer {api_token}\',\\n              \'Content-Type\': \'application/json\'\\n          }\\n\\n          response = requests.get(url, headers=headers)\\n          if response.status_code != 200:\\n              print(f\'\u30dd\u30ea\u30b7\u30fc\u306e\u53d6\u5f97\u306b\u5931\u6557\u3057\u307e\u3057\u305f: {response.status_code}\')\\n              print(response.text)\\n              exit(1)\\n\\n          policy = response.json()[\'result\']\\n          \\n          print(\\"\u53d6\u5f97\u3057\u305f\u30dd\u30ea\u30b7\u30fc\u69cb\u9020:\\")\\n          print(json.dumps(policy, indent=2))\\n          \\n          # \u30dd\u30ea\u30b7\u30fc\u306e\u30eb\u30fc\u30eb\u3092\u66f4\u65b0\uff08\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u30ea\u30b9\u30c8\u3092\u66f4\u65b0\uff09\\n          # Cloudflare Zero Trust\u306e\u30dd\u30ea\u30b7\u30fc\u69cb\u9020\u306b\u57fa\u3065\u3044\u3066\u66f4\u65b0\\n          \\n          # \u65b0\u3057\u3044include\u30eb\u30fc\u30eb\u3092\u69cb\u7bc9\\n          new_include = []\\n          \\n          # \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u30eb\u30fc\u30eb\u3092\u4f5c\u6210 - \u5143\u306e\u30dd\u30ea\u30b7\u30fc\u69cb\u9020\u3092\u53c2\u8003\u306b\\n          email_rules = []\\n          for email in emails:\\n              email_rules.append({\\n                  \\"email\\": {\\n                      \\"email\\": email\\n                  }\\n              })\\n          \\n          # \u3059\u3079\u3066\u306e\u30e1\u30fc\u30eb\u30eb\u30fc\u30eb\u3092include\u306b\u8ffd\u52a0\\n          new_include.extend(email_rules)\\n          \\n          # \u5143\u306einclude\u30bb\u30af\u30b7\u30e7\u30f3\u304b\u3089\u3001email\u95a2\u9023\u4ee5\u5916\u306e\u30eb\u30fc\u30eb\u3092\u4fdd\u6301\\n          if isinstance(policy.get(\'include\'), list):\\n              for rule in policy[\'include\']:\\n                  if \'email\' not in rule:\\n                      new_include.append(rule)\\n          \\n          # \u65b0\u3057\u3044include\u30eb\u30fc\u30eb\u3092\u30dd\u30ea\u30b7\u30fc\u306b\u8a2d\u5b9a\\n          policy[\'include\'] = new_include\\n\\n          # \u66f4\u65b0\u3057\u305f\u30dd\u30ea\u30b7\u30fc\u3092\u9069\u7528\\n          print(\\"\u66f4\u65b0\u5f8c\u306e\u30dd\u30ea\u30b7\u30fc\u69cb\u9020:\\")\\n          print(json.dumps(policy, indent=2))\\n          \\n          update_response = requests.put(url, headers=headers, json=policy)\\n          if update_response.status_code not in [200, 201, 202]:\\n              print(f\'\u30dd\u30ea\u30b7\u30fc\u306e\u66f4\u65b0\u306b\u5931\u6557\u3057\u307e\u3057\u305f: {update_response.status_code}\')\\n              print(update_response.text)\\n              exit(1)\\n\\n          print(\'\u30dd\u30ea\u30b7\u30fc\u306e\u66f4\u65b0\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\')\\n          print(f\'\u66f4\u65b0\u3055\u308c\u305f\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u6570: {len(emails)}\')\\n          EOF\\n          \\n          python update_policy.py\\n\\n```\\n\\n</details>\\n\\n\\n### \u611f\u60f3\\n\\n\u6700\u521d\u306f\u81ea\u529b\u3067\u3084\u308d\u3046\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u6d41\u77f3\u306b\u7121\u7406\u3067\u3057\u305f\u3002\u30d0\u30a4\u30d6\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u4e0d\u5b89\u3067\u306f\u3042\u308a\u307e\u3059\u304cGoogle\u30d5\u30a9\u30fc\u30e0\u3092\u95b2\u89a7\u3067\u304d\u308b\u5bfe\u8c61\u3092\u304b\u306a\u308a\u5236\u9650\u3057\u3066\u3044\u308b+\u7de8\u96c6\u8005\u3082\u6a29\u9650\u3092\u62e1\u5f35\u3067\u304d\u306a\u3044\u8a2d\u5b9a\u306b\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3042\u308b\u7a0b\u5ea6\u62c5\u4fdd\u306f\u3055\u308c\u3066\u3044\u308b\u304b\u306a\u3068\u8003\u3048\u3066\u3044\u307e\u3059\u3002<br />\\nGAS\u306e\u307b\u3046\u3067\u5e73\u6587\u3067Github\u306ePAT\u3092\u6271\u3063\u3066\u3044\u308b\u306e\u306f\u53cd\u7701\u3057\u3066\u304a\u308a\u307e\u3059\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u30b5\u30fc\u30d3\u30b9\u4f7f\u3048\u3070\u3088\u304b\u3063\u305f<br />\\n\u307e\u305f\u3001\u65e2\u5b58\u306e\u30dd\u30ea\u30b7\u30fc\u304b\u3089\u524a\u9664\u3059\u308b\u65b9\u5411\u306b\u3064\u3044\u3066\u306f\u3053\u306e\u81ea\u52d5\u5316\u3067\u306f\u5bfe\u5fdc\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u305d\u3061\u3089\u306f\u4f9d\u7136\u3068\u3057\u3066\u624b\u52d5\u306e\u4f5c\u696d\u306b\u983c\u3063\u3066\u3044\u307e\u3059\u3002\u524a\u9664\u3059\u308b\u30cb\u30fc\u30ba\u306f\u305d\u3053\u307e\u3067\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u305d\u3053\u306f\u624b\u52d5\u306e\u307e\u307e\u3067\u3088\u3044\u304b\u306a\u3068\u5224\u65ad\u3057\u307e\u3057\u305f\u3002<br />  \\n\u3061\u306a\u307f\u306b\u30c9\u30e1\u30a4\u30f3\u306e\u7dad\u6301\u8cbb\u4ee5\u5916\u306f**\u3059\u3079\u3066\u7121\u6599**\u3067\u3053\u306e\u6a5f\u80fd\u3092\u5b9f\u73fe\u3067\u304d\u3066\u3044\u307e\u3059\u3002\u3084\u3070\u3044\u3067\u3059\u3088\u306d\u3002<br />\\n\u304a\u8aad\u307f\u3044\u305f\u3060\u304d\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002"},{"id":"github-actions","metadata":{"permalink":"/blog/github-actions","editUrl":"https://github.com/All-Japan-Model-United-Nations/mogi-re4lity.com/tree/main/blog/2025-02-21-github-actions/index.md","source":"@site/blog/2025-02-21-github-actions/index.md","title":"\u672c\u30b5\u30a4\u30c8\u306e\u958b\u767a\u3067\u7528\u3044\u3066\u3044\u308bGithub Actions\u306e\u7d39\u4ecb","description":"\u3053\u306e\u30b5\u30a4\u30c8\u306e\u69cb\u7bc9\u3092\u62c5\u5f53\u3057\u3066\u3044\u308bre4lity\u3067\u3059\u3002","date":"2025-02-21T00:00:00.000Z","tags":[{"inline":false,"label":"Github Actions","permalink":"/blog/tags/Github-Actions","description":"Github Actions\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b"},{"inline":false,"label":"CI/CD","permalink":"/blog/tags/CI-CD","description":"CI/CD\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b"}],"readingTime":4.83,"hasTruncateMarker":true,"authors":[{"name":"re4lity","title":"\u7b2c36\u56de\u6a21\u64ec\u56fd\u9023\u5168\u65e5\u672c\u5927\u4f1a\u4e8b\u52d9\u5c40\u3000\u7dcf\u52d9\u7d71\u62ec","url":"https://github.com/sudolifeagain","page":{"permalink":"/blog/authors/re-4-lity"},"socials":{"x":"https://x.com/re4l_ity","github":"https://github.com/sudolifeagain"},"imageURL":"https://github.com/sudolifeagain.png","key":"re4lity"}],"frontMatter":{"slug":"github-actions","title":"\u672c\u30b5\u30a4\u30c8\u306e\u958b\u767a\u3067\u7528\u3044\u3066\u3044\u308bGithub Actions\u306e\u7d39\u4ecb","authors":["re4lity"],"tags":["Github Actions","CI/CD"]},"unlisted":false,"prevItem":{"title":"\u5185\u90e8\u30b5\u30a4\u30c8\u306e\u95b2\u89a7\u5236\u9650(Zero Trust\u30fbAccess\u30dd\u30ea\u30b7\u30fc)\u306e\u7de8\u96c6\u3092\u81ea\u52d5\u5316\u3057\u305f\u8a71","permalink":"/blog/zero-trust"}},"content":"\u3053\u306e\u30b5\u30a4\u30c8\u306e\u69cb\u7bc9\u3092\u62c5\u5f53\u3057\u3066\u3044\u308bre4lity\u3067\u3059\u3002\\n\u672c\u8a18\u4e8b\u3067\u306f\u3001\u73fe\u5728\u63a1\u7528\u3057\u3066\u3044\u308bCI/CD\u306e\u305f\u3081\u306eGithub Actions\u306e\u5b9f\u88c5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\\n\x3c!-- truncate --\x3e\\n\\n## \u958b\u767a\u30d5\u30ed\u30fc\u306b\u3064\u3044\u3066\\n\\n### \u30d6\u30e9\u30f3\u30c1\u69cb\u6210\\n\\n\u672c\u30b5\u30a4\u30c8\u306fmain\u30d6\u30e9\u30f3\u30c1\u3001dev\u30d6\u30e9\u30f3\u30c1\u3001gh-pages\u30d6\u30e9\u30f3\u30c1\u306e3\u3064\u3092\u904b\u7528\u3057\u3066\u3044\u307e\u3059\u3002\\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7528\u9014\u3092\u5207\u308a\u5206\u3051\u3066\u3044\u307e\u3059\u3002\\n\\n- dev\u30d6\u30e9\u30f3\u30c1\\n  - \u958b\u767a\u7528\u30d6\u30e9\u30f3\u30c1\\n- main\u30d6\u30e9\u30f3\u30c1\\n  - \u672c\u756a\u74b0\u5883\u306e\u30c7\u30d7\u30ed\u30a4\u5143\\n- gh-pages\u30d6\u30e9\u30f3\u30c1\\n  - \u9759\u7684\u30b5\u30a4\u30c8\u751f\u6210\u7528\u30d6\u30e9\u30f3\u30c1\\n\\n### \u958b\u767a\u306e\u6d41\u308c\\n\\n1. [\u4f5c\u696dissue \xb7 mogi.re4lity.com\u958b\u767a](https://github.com/orgs/All-Japan-Model-United-Nations/projects/4)\u306b\u3066\u30bf\u30b9\u30af\u3092\u8d77\u7968\\n2. dev\u30d6\u30e9\u30f3\u30c1\u4e0a\u3067\u30bf\u30b9\u30af\u5358\u4f4d\u306e\u958b\u767a\u3092\u9032\u3081\u3001\u7d42\u4e86\u3057\u305f\u3089main\u30d6\u30e9\u30f3\u30c1\u306b\u5bfe\u3059\u308b\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4f5c\u6210\\n3. \u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u958b\u304f\u3068check.yml\u304c\u8d70\u308atsc\u3068build\u3092\u5b9f\u884c\u3057\u30ed\u30b0\u3092\u30b3\u30e1\u30f3\u30c8\u306b\u6b8b\u3059\\n4. \u4e0a\u8a18\u306eGithub Actions\u304c\u6210\u529f\u3057\u305f\u5834\u5408\u306e\u307f\u3001main\u30d6\u30e9\u30f3\u30c1\u306b\u5bfe\u3057\u3066\u30de\u30fc\u30b8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\\n5. \u30de\u30fc\u30b8\u3055\u308c\u308b\u3068deploy.yml\u304c\u8d70\u308agh-pages\u30d6\u30e9\u30f3\u30c1\u306b\u3066\u30c7\u30d7\u30ed\u30a4\u304c\u884c\u308f\u308c\u308b\\n\\n\u6700\u521d\u671f\u306fmain\u30d6\u30e9\u30f3\u30c1\u4e0a\u3067\u958b\u767a\u3092\u9032\u3081\u3066\u3057\u307e\u3063\u3066\u3044\u305f\u305f\u3081\u3001\u30c7\u30d7\u30ed\u30a4\u306e\u904e\u7a0b\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u30b5\u30a4\u30c8\u304c\u516c\u958b\u3067\u304d\u306a\u304f\u306a\u308b\u3068\u3044\u3046\u3053\u3068\u3082\u3042\u308a\u307e\u3057\u305f(n\u6557)\u3002\\n\\n\u307e\u305f\u3001dev\u30d6\u30e9\u30f3\u30c1\u306b\u5207\u308a\u5206\u3051\u305f\u5f8c\u3082\u3001main\u30d6\u30e9\u30f3\u30c1\u306b\u5bfe\u3057\u3066\u306e\u30de\u30fc\u30b8\u3092\u884c\u3063\u305f\u5f8c\u3001\u30ed\u30fc\u30ab\u30eb\u306e\u958b\u767a\u74b0\u5883\u306b\u3066\u624b\u52d5\u3067main\u30d6\u30e9\u30f3\u30c1\u306b\u30c1\u30a7\u30c3\u30af\u30a2\u30a6\u30c8\u3057\u3066yarn deploy\u3092\u5b9f\u884c\u3057\u3066\u3044\u305f\u306e\u3067\u3001\u305d\u306e\u624b\u9593\u3092deploy.yml\u306b\u3088\u3063\u3066\u7701\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\\n\\n\u300c\u306b\u308f\u304b\u300d\u72b6\u614b\u3067\u30b5\u30a4\u30c8\u3092\u958b\u767a\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u4e0d\u5fc5\u8981\u306a\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u305f\u308a\u3057\u305d\u3046(\u7279\u306bcheck.yml\u304c\u602a\u3057\u3044\u3068\u601d\u3063\u3066\u3044\u307e\u3059)\u3067\u3059\u304c\u3001\u30c8\u30e9\u30a4\uff06\u30a8\u30e9\u30fc\u3067\u3053\u308c\u304b\u3089\u3082\u9811\u5f35\u3063\u3066\u958b\u767a\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\\n\\n\u3082\u3057\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u3001Github\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u3066issue\u5efa\u3066\u3084\u30b3\u30e1\u30f3\u30c8\u3092\u9802\u3051\u308c\u3070\u6ce3\u3044\u3066\u559c\u3073\u307e\u3059\u3002\\n\u304a\u8aad\u307f\u3044\u305f\u3060\u304d\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\\n\\n\\n## check\\n\\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\uff1a[mogi-re4lity.com/.github/workflows/check.yml at main](https://github.com/All-Japan-Model-United-Nations/mogi-re4lity.com/blob/main/.github/workflows/check.yml)\\n\\n```yml title=\\".github/workflow/check.yml\\"\\nname: Check TypeScript and Build on PR\\n\\non:\\n  pull_request:\\n    branches:\\n      - main\\n    types: [opened, synchronize, reopened]\\n\\njobs:\\n  check:\\n    runs-on: ubuntu-latest\\n\\n    steps:\\n    - name: Checkout code\\n      uses: actions/checkout@v3\\n\\n    - name: Set up Node.js\\n      uses: actions/setup-node@v3\\n      with:\\n        node-version: \'18\'\\n\\n    - name: Install dependencies\\n      run: yarn install\\n\\n    - name: TypeScript type check\\n      id: typecheck\\n      run: |\\n        yarn typecheck 2>&1 | tee typescript-report.txt\\n        exit ${PIPESTATUS[0]}\\n\\n    - name: Build project\\n      id: build\\n      run: |\\n        yarn build 2>&1 | tee build-report.txt\\n        exit ${PIPESTATUS[0]}\\n\\n    - name: Comment Test Results on PR\\n      if: always() && github.event_name == \'pull_request\'\\n      uses: actions/github-script@v7\\n      with:\\n        script: |\\n          const fs = require(\'fs\');\\n          let report = \'## Build Test Results\\\\n\';\\n\\n          if (fs.existsSync(\'typescript-report.txt\')) {\\n            report += \'\\\\n### TypeScript Check\\\\n```\\\\n\' +\\n              fs.readFileSync(\'typescript-report.txt\', \'utf8\') + \'\\\\n```\\\\n\';\\n          }\\n\\n          if (fs.existsSync(\'build-report.txt\')) {\\n            report += \'\\\\n### Build Output\\\\n```\\\\n\' +\\n              fs.readFileSync(\'build-report.txt\', \'utf8\') + \'\\\\n```\\\\n\';\\n          }\\n\\n          await github.rest.issues.createComment({\\n            owner: context.repo.owner,\\n            repo: context.repo.repo,\\n            issue_number: context.issue.number,\\n            body: report\\n          });\\n\\n```\\n\\n\u30b3\u30e1\u30f3\u30c8\uff1a[check\u3067\u62fe\u3044\u305f\u3044\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8 by sudolifeagain \xb7 Pull Request #34](https://github.com/All-Japan-Model-United-Nations/mogi-re4lity.com/pull/34)\\n\\n\u5b9f\u969b\u306b\u3053\u3061\u3089\u3067\u7d76\u5bfe\u30c7\u30d7\u30ed\u30a4\u3055\u305b\u305f\u304f\u306a\u3044\u7de8\u96c6\u3092\u542b\u3093\u3060\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u3001\u30c1\u30a7\u30c3\u30af\u6bb5\u968e\u3067\u5f3e\u3051\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\\n\\n\\n## deploy\\n\\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\uff1a[mogi-re4lity.com/.github/workflows/deploy.yml at main](https://github.com/All-Japan-Model-United-Nations/mogi-re4lity.com/blob/main/.github/workflows/deploy.yml)\\n\\n```yml title=\\".github/workflow/deploy.yml\\"\\nname: Deploy Docusaurus Site\\n\\non:\\n  push:\\n    branches:\\n      - main\\n\\njobs:\\n  build:\\n    runs-on: ubuntu-latest\\n\\n    steps:\\n    - name: Checkout repository\\n      uses: actions/checkout@v3\\n\\n    - name: Set up Node.js\\n      uses: actions/setup-node@v3\\n      with:\\n        node-version: \'18\'\\n\\n    - name: Install dependencies\\n      run: npm install\\n\\n    - name: Run TypeScript type check\\n      run: npm run typecheck\\n\\n    - name: Build the Docusaurus site\\n      run: npm run build\\n\\n    - name: Configure Git\\n      run: |\\n        git config --global user.email \\"${{ secrets.GIT_USER_EMAIL }}\\"\\n        git config --global user.name \\"${{ secrets.GIT_USER_NAME }}\\"\\n\\n    - name: Deploy the site to GitHub Pages\\n      run: |\\n        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}\\n        npm run deploy\\n      env:\\n        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\\n\\n```\\n\\n\u30b3\u30e1\u30f3\u30c8\uff1a\u6700\u521d\u306f\u30ed\u30fc\u30ab\u30eb\u3067\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u3044\u308b\u6642\u306b\u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c\u304c\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u6e21\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u77e5\u3089\u305a\u3001github-token\u3092\u542b\u3093\u3060 git remote set-url origin ~~ \u3092\u6e21\u3057\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002ChatGPT\u541b\u3001Claude\u541b\u3042\u308a\u304c\u3068\u3046\u3002\\n\\ncheck.yml\u3067\u3082\u884c\u3063\u305fbuild\u30b3\u30de\u30f3\u30c9\u3092\u3053\u3061\u3089\u3067\u3082\u5b9f\u884c\u3057\u3066\u3044\u308b\u306e\u306f\u91cd\u8907\u306a\u306e\u3067\u7701\u3044\u3066\u3082\u3088\u3044\u304b\u306a\uff5e\uff5e\u3068\u601d\u3063\u3066\u304a\u308a\u307e\u3059\u3002\u4e00\u756a\u4e0b\u306enpm run deploy\u3067\u540c\u3058\u64cd\u4f5c\u542b\u307e\u308c\u3066\u3044\u308b\u3068\u601d\u3046\u3057...\\n\\n\u6642\u9593\u304c\u3042\u3063\u305f\u3089\u8a72\u5f53\u30b3\u30fc\u30c9\u3092\u524a\u9664\u3057\u3066\u691c\u8a3c\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002"}]}}')}}]);